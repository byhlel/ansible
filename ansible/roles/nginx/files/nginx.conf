user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	multi_accept on;
}

http {

	##
	# Basic Settings
	##

	server_tokens off;

	##
	# Logging Settings
	##

	log_format security '$remote_addr - $remote_user [$time_local] '
		'"$request" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'rt=$request_time ua="$upstream_addr" '
		'upstrt=$upstream_response_time';

	access_log /var/log/nginx/access.log security;
	error_log /var/log/nginx/error.log warn;


	##
	# Server HTTP
	##

	server {
		listen 80;
		server_name 192.168.3.2;

		return 301 https://$host$request_uri;
	}

	##
	# Server HTTPS
	##

	server {
		listen 443 ssl http2;
		server_name 192.168.3.2;

		root /var/www/html;
		index index.html;

		##
		# SSL Settings
		##

		ssl_certificate		/etc/ssl/certs/server.crt;
		ssl_certificate_key	/etc/ssl/certs/server.key;

		# ssl_client_certificate 	/etc/sll/certs/client.crt;
		# ssl_verify_client		on;

		ssl_protocols		TLSv1.2 TLSv1.3;
		ssl_prefer_server_ciphers	off;

		ssl_ciphers 		'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

		##
		# Security Settings
		##

		# Bloquer le framing (clickjacking)
		add_header X-Frame-Options "SAMEORIGIN" always;

		# Protection XSS
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;

		# CSP la plus restrictive
		#add_header Content-Security-Policy "
		#	default-src 'self';
		#	script-src 'self';
		#	style-src 'self';
		#	img-src 'self';
		#	font-src 'self';
		#	object-src 'self';
		#	base-uri 'self';
		#	form-action 'self';
		#	frame-ancestors 'none';
		#	upgrade-insecure-requests;
		#" always;

		# Declaration des API navigateur
		#add_header Permissions-Policy "
		#	geolocation=(),
		#	camera=(),
		#	microphone=(),
		#	fullscreen=(self)
		#" always;


		location = / {
			if ($request_method !~ ^(GET|POST|PUT)$) {
				return 405;
			}
			try_files /index.html = 404;
		}

		location /blog/ {
			if ($request_method !~ ^(GET|POST|PUT)$) {
				return 405;
			}
			proxy_pass	http://127.0.0.1:8000/;
			proxy_set_header Host		$host;
			proxy_set_header X-Real-IP	$remote_addr;
			proxy_set_header x-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header x-Forwarded-Proto $scheme;
		}

		location / {
			if ($request_method !~ ^(GET|POST|PUT)$) {
				return 405;
			}
			return 404;
		}
	}


	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
